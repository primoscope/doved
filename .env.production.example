# EchoTune AI Production Environment Configuration
# Copy this to .env and update with your actual values

# =============================================================================
# REQUIRED CONFIGURATION (Must be set for production deployment)
# =============================================================================

# Domain Configuration (CRITICAL - Update for your domain)
DOMAIN=your-domain.com
WWW_DOMAIN=www.your-domain.com
FRONTEND_URL=https://your-domain.com

# Spotify API Configuration (REQUIRED)
SPOTIFY_CLIENT_ID=your_spotify_client_id_here
SPOTIFY_CLIENT_SECRET=your_spotify_client_secret_here
SPOTIFY_REDIRECT_URI=https://your-domain.com/auth/callback

# Production Server Configuration
NODE_ENV=production
PORT=3000

# Security Settings (CRITICAL - Generate strong random secrets)
# Use: openssl rand -base64 32
SESSION_SECRET=generate_super_secure_random_session_secret_min_32_chars
JWT_SECRET=generate_super_secure_jwt_secret_for_api_tokens

# =============================================================================
# SSL AND CERTIFICATES CONFIGURATION
# =============================================================================

# SSL Configuration (automatically managed by ssl-manager.sh)
SSL_CERT_PATH=/etc/nginx/ssl/${DOMAIN}.crt
SSL_KEY_PATH=/etc/nginx/ssl/${DOMAIN}.key

# Let's Encrypt Configuration
LETSENCRYPT_EMAIL=admin@your-domain.com
STAGING=false
DRY_RUN=false

# =============================================================================
# NGINX AND LOAD BALANCING CONFIGURATION
# =============================================================================

# Nginx upstream configuration
APP_HOST=app
APP_PORT=3000

# Rate limiting configuration
API_RATE_LIMIT=10r/s
AUTH_RATE_LIMIT=5r/m
GENERAL_RATE_LIMIT=100r/m
API_BURST=20
AUTH_BURST=5
GENERAL_BURST=50

# Logging paths
ACCESS_LOG_PATH=/var/log/nginx/echotune_access.log
ERROR_LOG_PATH=/var/log/nginx/echotune_error.log

# =============================================================================
# SECURITY AND PERFORMANCE CONFIGURATION
# =============================================================================

# Request Size Limits
MAX_REQUEST_SIZE=10mb
COMPRESSION=true

# CORS Configuration
ENABLE_CORS=true
CORS_ORIGINS=https://your-domain.com,https://www.your-domain.com

# Content Security Policy
CSP_ENABLED=true
CSP_REPORT_ONLY=false

# Security Headers
ENABLE_SECURITY_HEADERS=true
HSTS_MAX_AGE=31536000
HSTS_INCLUDE_SUBDOMAINS=true
HSTS_PRELOAD=true

# =============================================================================
# DATABASE CONFIGURATION (Choose one or more)
# =============================================================================

# MongoDB for analytics and ML data (recommended for production)
MONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net/echotune_prod?retryWrites=true&w=majority
MONGODB_DATABASE=echotune_production

# Supabase for user data and sessions (optional)
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_ANON_KEY=your_supabase_anon_key
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key
DATABASE_URL=postgresql://username:password@db.your-project.supabase.co:5432/postgres

# Redis for session storage and caching (recommended for production)
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=your_redis_password_if_required
REDIS_DB=0

# =============================================================================
# LLM PROVIDER CONFIGURATION (Optional - fallback to mock if not configured)
# =============================================================================

# OpenAI Configuration
OPENAI_API_KEY=sk-your_openai_api_key_here
OPENAI_MODEL=gpt-4
OPENAI_MAX_TOKENS=4096

# Google Gemini Configuration (recommended)
GEMINI_API_KEY=your_gemini_api_key_here
GEMINI_MODEL=gemini-1.5-flash
GEMINI_TEMPERATURE=0.7
GEMINI_MAX_TOKENS=4096

# Azure OpenAI Configuration
AZURE_OPENAI_API_KEY=your_azure_openai_api_key_here
AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com/
AZURE_OPENAI_DEPLOYMENT=your_deployment_name

# OpenRouter Configuration
OPENROUTER_API_KEY=sk-or-v1-your_openrouter_api_key_here

# Default LLM Provider (openai, gemini, azure, openrouter, mock)
DEFAULT_LLM_PROVIDER=gemini
DEFAULT_LLM_MODEL=gemini-1.5-flash

# =============================================================================
# LOGGING AND MONITORING CONFIGURATION
# =============================================================================

# Application Logging
LOG_LEVEL=info
LOG_FILE=/opt/echotune/logs/app.log
ACCESS_LOG_FILE=/opt/echotune/logs/access.log
ERROR_LOG_FILE=/opt/echotune/logs/error.log

# Log Rotation Settings
LOG_ROTATION_ENABLED=true
LOG_MAX_SIZE=100M
LOG_MAX_FILES=10
LOG_COMPRESS=true

# Monitoring Settings
HEALTH_CHECK_ENABLED=true
METRICS_ENABLED=true
PERFORMANCE_MONITORING=true

# Health Check Configuration
HEALTH_TIMEOUT=10
CRITICAL_THRESHOLD=5
WARNING_THRESHOLD=3

# =============================================================================
# EMAIL AND NOTIFICATIONS CONFIGURATION
# =============================================================================

# SMTP Configuration (for notifications and alerts)
SMTP_HOST=smtp.your-email-provider.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your_smtp_username
SMTP_PASS=your_smtp_password
FROM_EMAIL=noreply@your-domain.com

# Alert Configuration
ALERT_EMAIL=admin@your-domain.com
SLACK_WEBHOOK=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# =============================================================================
# MONITORING AND ANALYTICS CONFIGURATION
# =============================================================================

# External Monitoring Services
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
GOOGLE_ANALYTICS_ID=G-XXXXXXXXXX

# Performance Monitoring Thresholds
RESPONSE_TIME_THRESHOLD=5000
CPU_THRESHOLD=80
MEMORY_THRESHOLD=85
DISK_THRESHOLD=90

# =============================================================================
# CACHING AND PERFORMANCE CONFIGURATION
# =============================================================================

# Cache Settings
CACHE_TTL=3600
SPOTIFY_API_CACHE_TTL=300
CACHE_ENABLED=true

# Performance Settings
CLUSTERING=false
WORKERS=auto
KEEP_ALIVE_TIMEOUT=65000
HEADERS_TIMEOUT=66000

# Compression Settings
ENABLE_GZIP=true
GZIP_LEVEL=6
GZIP_MIN_LENGTH=1024

# =============================================================================
# FEATURE FLAGS CONFIGURATION
# =============================================================================

# Application Features
ENABLE_RECOMMENDATIONS=true
ENABLE_PLAYLIST_CREATION=true
ENABLE_USER_ANALYTICS=true
ENABLE_CHAT_HISTORY=true
ENABLE_AI_FEATURES=true

# Security Features
ENABLE_RATE_LIMITING=true
ENABLE_DDOS_PROTECTION=true
ENABLE_SECURITY_HEADERS=true
ENABLE_CSP=true

# =============================================================================
# BACKUP AND MAINTENANCE CONFIGURATION
# =============================================================================

# Backup Configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_COMPRESSION=true

# Remote Backup Configuration (optional)
REMOTE_BACKUP=false
AWS_S3_BUCKET=your-backup-bucket
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
REMOTE_BACKUP_PATH=user@backup-server:/path/to/backups

# Database Backup Settings
DB_BACKUP_ENABLED=true
DB_BACKUP_SCHEDULE=0 3 * * *
DB_BACKUP_RETENTION_DAYS=30

# =============================================================================
# DEVELOPMENT AND DEBUGGING (Disable in production)
# =============================================================================

# Debug Settings (MUST be false in production)
DEBUG=false
VERBOSE_LOGGING=false
ENABLE_PROFILING=false
STACK_TRACE_ENABLED=false

# =============================================================================
# ADVANCED CONFIGURATION (Optional)
# =============================================================================

# Load Balancer Configuration
TRUST_PROXY=true
PROXY_TIMEOUT=30000

# WebSocket Configuration
WEBSOCKET_ENABLED=true
WEBSOCKET_PATH=/socket.io

# File Upload Configuration
UPLOAD_MAX_SIZE=50mb
UPLOAD_ALLOWED_TYPES=image/jpeg,image/png,audio/mpeg,audio/wav

# API Configuration
API_VERSION=v1
API_PREFIX=/api

# User Rate Limiting
USER_RATE_LIMIT_WINDOW_MS=3600000
USER_RATE_LIMIT_MAX_REQUESTS=1000

# Session Configuration
SESSION_COOKIE_MAX_AGE=86400000
SESSION_COOKIE_SECURE=true
SESSION_COOKIE_HTTP_ONLY=true
SESSION_COOKIE_SAME_SITE=lax

# =============================================================================
# PRODUCTION DEPLOYMENT CHECKLIST
# =============================================================================

# [ ] Replace all placeholder values with actual production values
# [ ] Generate strong random secrets for SESSION_SECRET and JWT_SECRET
# [ ] Configure your actual domain name and SSL certificates
# [ ] Set up MongoDB Atlas or local MongoDB instance
# [ ] Configure LLM provider API keys (or leave blank for mock mode)
# [ ] Set up SMTP for email notifications
# [ ] Configure monitoring and alerting
# [ ] Test SSL certificates and HTTPS configuration
# [ ] Verify firewall allows only necessary ports (80, 443, 22)
# [ ] Set up automated backups and test restore procedures
# [ ] Configure log rotation to prevent disk space issues
# [ ] Test health checks and monitoring
# [ ] Verify all security headers and CORS configuration
# [ ] Perform load testing with expected traffic

# =============================================================================
# SECURITY PRODUCTION CHECKLIST
# =============================================================================

# [ ] All secrets are properly randomized and secure
# [ ] Database credentials are environment-specific
# [ ] CORS origins are restricted to production domains only
# [ ] Rate limiting is properly configured and tested
# [ ] SSL certificates are valid and auto-renewing
# [ ] Firewall allows only necessary ports
# [ ] Monitoring and alerting are configured and tested
# [ ] Backup and restore procedures are tested
# [ ] Log files are rotated and secured
# [ ] All debugging features are disabled in production
# [ ] Security headers are enabled and tested
# [ ] Content Security Policy is configured
# [ ] No hardcoded credentials in code or environment files

# =============================================================================
# PERFORMANCE OPTIMIZATION CHECKLIST
# =============================================================================

# [ ] Gzip compression is enabled
# [ ] Static assets are cached properly
# [ ] Database queries are optimized
# [ ] Redis caching is configured for sessions and API responses
# [ ] CDN is configured for static assets (if applicable)
# [ ] Load balancing is configured for high availability
# [ ] Health checks are configured for all critical services
# [ ] Performance monitoring is set up with alerting thresholds
