{
  "name": "echotune-mcp",
  "version": "1.0.0",
  "description": "MCP server for EchoTune AI automation and browser integration",
  "main": "index.js",
  "scripts": {
    "start": "node enhanced-mcp-orchestrator.js",
    "dev": "nodemon enhanced-mcp-orchestrator.js",
    "test": "jest",
    "spotify-server": "python spotify_server.py",
    "orchestrator": "node enhanced-mcp-orchestrator.js",
    "legacy-server": "node enhanced-server.js"
  },
  "dependencies": {
    "puppeteer": "^21.0.0",
    "express": "^4.18.0",
    "ws": "^8.14.0",
    "cors": "^2.8.5",
    "dotenv": "^16.3.0"
  },
  "devDependencies": {
    "nodemon": "^3.0.0",
    "jest": "^29.0.0"
  },
  "servers": {
    "browser": {
      "command": "npx",
      "args": ["@modelcontextprotocol/server-puppeteer"],
      "env": {
        "PUPPETEER_HEADLESS": "true",
        "PUPPETEER_ARGS": "--no-sandbox --disable-setuid-sandbox"
      }
    },
    "browserbase": {
      "command": "npx",
      "args": ["@browserbasehq/mcp-server-browserbase"],
      "env": {
        "BROWSERBASE_API_KEY": "${BROWSERBASE_API_KEY}",
        "BROWSERBASE_PROJECT_ID": "${BROWSERBASE_PROJECT_ID}",
        "BROWSERBASE_SESSION_ID": "${BROWSERBASE_SESSION_ID}"
      }
    },
    "mermaid": {
      "command": "npx",
      "args": ["mcp-mermaid"],
      "description": "Mermaid diagram generation for workflow visualization"
    },
    "filesystem": {
      "command": "node",
      "args": ["../node_modules/FileScopeMCP/dist/index.js"],
      "env": {
        "ALLOWED_DIRECTORIES": "${PWD}/..,${PWD}/../src,${PWD}/../scripts,${PWD}"
      },
      "description": "File system operations and repository management"
    },
    "spotify": {
      "command": "python",
      "args": ["spotify_server.py"],
      "env": {
        "SPOTIFY_CLIENT_ID": "${SPOTIFY_CLIENT_ID}",
        "SPOTIFY_CLIENT_SECRET": "${SPOTIFY_CLIENT_SECRET}",
        "SPOTIFY_REDIRECT_URI": "${SPOTIFY_REDIRECT_URI}"
      }
    }
  },
  "tools": {
    "spotify_get_recommendations": {
      "description": "Get personalized music recommendations using ML model",
      "parameters": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "User ID for personalized recommendations"
          },
          "limit": {
            "type": "number",
            "description": "Number of recommendations to return",
            "default": 20
          },
          "seed_genres": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Seed genres for recommendations"
          },
          "target_features": {
            "type": "object",
            "description": "Target audio features (danceability, energy, valence, etc.)"
          }
        },
        "required": ["user_id"]
      }
    },
    "spotify_create_playlist": {
      "description": "Create a new Spotify playlist with specified tracks",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Playlist name"
          },
          "tracks": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Array of Spotify track URIs"
          },
          "description": {
            "type": "string",
            "description": "Playlist description"
          },
          "public": {
            "type": "boolean",
            "description": "Whether playlist should be public",
            "default": false
          }
        },
        "required": ["name", "tracks"]
      }
    },
    "spotify_analyze_listening_data": {
      "description": "Analyze user listening patterns from CSV data",
      "parameters": {
        "type": "object",
        "properties": {
          "data_file": {
            "type": "string",
            "description": "Path to CSV file with listening data"
          },
          "analysis_type": {
            "type": "string",
            "enum": ["summary", "trends", "preferences", "discovery"],
            "description": "Type of analysis to perform"
          },
          "time_range": {
            "type": "string",
            "description": "Time range for analysis (e.g., '30d', '6m', '1y')"
          }
        },
        "required": ["data_file", "analysis_type"]
      }
    },
    "browser_automate_spotify": {
      "description": "Automate Spotify Web Player interactions",
      "parameters": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": ["login", "play_track", "create_playlist", "follow_artist", "save_track"],
            "description": "Action to perform"
          },
          "target": {
            "type": "string",
            "description": "Target for the action (track URI, artist URI, etc.)"
          },
          "credentials": {
            "type": "object",
            "properties": {
              "username": {"type": "string"},
              "password": {"type": "string"}
            },
            "description": "Spotify login credentials (use environment variables)"
          }
        },
        "required": ["action"]
      }
    },
    "browser_scrape_spotify_data": {
      "description": "Scrape additional data from Spotify Web Player",
      "parameters": {
        "type": "object",
        "properties": {
          "data_type": {
            "type": "string",
            "enum": ["playlists", "liked_songs", "recently_played", "top_artists"],
            "description": "Type of data to scrape"
          },
          "limit": {
            "type": "number",
            "description": "Number of items to scrape",
            "default": 50
          }
        },
        "required": ["data_type"]
      }
    }
  },
  "resources": {
    "user_profile": {
      "description": "Get user's music profile and preferences",
      "uri_template": "echotune://user/{user_id}/profile"
    },
    "listening_history": {
      "description": "Access to user's listening history data",
      "uri_template": "echotune://user/{user_id}/history"
    },
    "recommendations": {
      "description": "Generated recommendations for user",
      "uri_template": "echotune://user/{user_id}/recommendations"
    },
    "playlists": {
      "description": "User's Spotify playlists",
      "uri_template": "echotune://user/{user_id}/playlists"
    }
  }
}